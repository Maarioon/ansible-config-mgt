pipeline {
    agent any

    stages {
        stage("Initial cleanup") {
            steps {
                dir("${WORKSPACE}") {
                    deleteDir()
                }
            }
        }

        stage('Checkout SCM') {
            steps {
                git branch: 'main', url: 'https://github.com/Maarioon/php-todo2-jk.git'
            }
        }

        stage('Install PHP curl extension') {
            steps {
                script {
                    // Update the system and install PHP cURL extension
                    sh 'sudo apt-get update -y'
                    sh 'sudo apt-get install -y php8.3-curl'
                    sh 'sudo service php8.3-fpm restart'  // Restart PHP-FPM (or use Apache if that's your server)
                }
            }
        }


       stage('Install Composer Dependencies') {
            steps {
                script {
                    // Navigate to the correct folder if necessary
                    sh 'cd /var/lib/jenkins/workspace/ansible-config-mgt && composer install'
                }
            }
        }

        stage('Prepare Dependencies') {
            steps {
                sh 'mv .env.sample .env'
                sh 'composer install'
                sh 'php artisan migrate'
                sh 'php artisan db:seed'
                sh 'php artisan key:generate'
            }
        }

        stage('Execute Unit Tests') {
            steps {
                sh './vendor/bin/phpunit'
            }
        }

        stage('Code Analysis') {
            steps {
                sh 'phploc app/ --log-csv build/logs/phploc.csv'
            }
        }
    }
}

